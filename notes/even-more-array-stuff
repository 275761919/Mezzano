;; This buffer is for notes you don't want to save, and for Lisp evaluation.
;; If you want to create a file, visit that file with C-x C-f,
;; then enter the text in that file's own buffer.

(defconstant +tag-even-fixnum+   #b0000)
(defconstant +tag-cons+          #b0001)
(defconstant +tag-symbol+        #b0010)
(defconstant +tag-array-header+  #b0011)
;;(defconstant +tag-+  #b0100)
;;(defconstant +tag-+  #b0101)
;;(defconstant +tag-+  #b0110)
(defconstant +tag-array-like+    #b0111)
(defconstant +tag-odd-fixnum+    #b1000)
;;(defconstant +tag-+  #b1001)
(defconstant +tag-character+     #b1010)
(defconstant +tag-single-float+  #b1011)
(defconstant +tag-function+      #b1100)
;;(defconstant +tag-+  #b1101)
(defconstant +tag-unbound-value+ #b1110)
(defconstant +tag-gc-forward+    #b1111)

0000 fixnum-000
0001 arrays (aka object-00)
0010 fixnum-001
0011 extended-number (aka object-01)
0100 fixnum-010
0101 other-objects (aka object-10)
0110 fixnum-011
0111 function (aka object-11)
1000 fixnum-100
1001 cons
1010 fixnum-101
1011 character
1100 fixnum-110
1101 single-float
1110 fixnum-111
1111 gc-forward

TT ttttt

arrays
00 00000 simple-vector
00 00001 (simple-array base-char (*))
00 00010 (simple-array character (*))
00 00011 (simple-array bit (*))
00 00100 (simple-array (unsigned-byte 2) (*))
00 00101 (simple-array (unsigned-byte 4) (*))
00 00110 (simple-array (unsigned-byte 8) (*))
00 00111 (simple-array (unsigned-byte 16) (*))
00 01000 (simple-array (unsigned-byte 32) (*))
00 01001 (simple-array (unsigned-byte 64) (*))
00 01010 (simple-array (signed-byte 1) (*))
00 01011 (simple-array (signed-byte 2) (*))
00 01100 (simple-array (signed-byte 4) (*))
00 01101 (simple-array (signed-byte 8) (*))
00 01110 (simple-array (signed-byte 16) (*))
00 01111 (simple-array (signed-byte 32) (*))
00 10000 (simple-array (signed-byte 64) (*))
00 10001 (simple-array single-float (*))
00 10010 (simple-array double-float (*))
00 10011 (simple-array short-float (*))
00 10100 (simple-array long-float (*))
00 10101 (simple-array (complex single-float) (*))
00 10110 (simple-array (complex double-float) (*))
00 10111 (simple-array (complex short-float) (*))
00 11000 (simple-array (complex long-float) (*))
00 11001
00 11010
00 11011 memory-array
         fill pointer, type, storage, dimensions...
00 11100 simple-string
         fill pointer, displacement, storage, dimension
00 11101 string
         fill pointer, displacement, storage, dimension
00 11110 simple-array
         fill pointer, displacement, storage, dimensions...
00 11111 array
         fill pointer, displacement, storage, dimensions...

extended number
01 00000 bignum
01 00001 double-float
01 00010 short-float
01 00011 long-float
01 00100 (complex t)
01 00101 (complex single-float)
01 00110 (complex double-float)
01 00111 (complex short-float)
01 01000 (complex long-float)
01 01001 ratio
01 01010
01 01011
01 01100
01 01101
01 01110
01 01111
01 10000
01 10001
01 10010
01 10011
01 10100
01 10101
01 10110
01 10111
01 11000
01 11001
01 11010
01 11011
01 11100
01 11101
01 11110
01 11111

other-objects
10 00000 structure-object
10 00001 std-instance
10 00010 stack-group
10 00011 symbol
10 00100
10 00101
10 00110
10 00111
10 01000
10 01001
10 01010
10 01011
10 01100
10 01101
10 01110
10 01111
10 10000
10 10001
10 10010
10 10011
10 10100
10 10101
10 10110
10 10111
10 11000
10 11001
10 11010
10 11011
10 11100
10 11101
10 11110
10 11111

Functions
11 00000 compiled-function
11 00001 closure
11 00010 funcallable-instance
11 00011
11 00100
11 00101
11 00110
11 00111
11 01000
11 01001
11 01010
11 01011
11 01100
11 01101
11 01110
11 01111
11 10000
11 10001
11 10010
11 10011
11 10100
11 10101
11 10110
11 10111
11 11000
11 11001
11 11010
11 11011
11 11100
11 11101
11 11110
11 11111


LLLLLLLL LLLLLLLL LLLLLLLL tttttggg
