(in-package #:sys.int)

(defun write-unsigned-integer (x base)
  (unless (= x 0)
    (write-unsigned-integer (truncate x base) base)
    (write-char (schar "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                       (rem x base)))))

(defun write-integer (x &optional (base 10))
  (cond ((= x 0)
         (write-char #\0))
        ((< x 0)
         (write-char #\-)
         (write-unsigned-integer (- 0 x) base))
        (t (write-unsigned-integer x base))))

(defun write-string (string)
  (dotimes (i (length string))
    (write-char (char string i))))

(defun write (object &rest blah)
  (typecase object
    (integer (write-integer object))
    (cons
     (write-char #\()
     (write (car object))
     (do ((i (cdr object) (cdr i)))
         ((atom i)
          (when i
            (write-string " . ")
            (write i))
          (write-char #\)))
       (write-char #\Space)
       (write (car i))))
    (symbol
     (when (keywordp object)
       (write-char #\:))
     (write-string (symbol-name object)))
    (string
     (write-char #\")
     (dotimes (i (length object))
       (let ((c (char object i)))
         (case c
           (#\\ (write-char #\\) (write-char #\\))
           (#\" (write-char #\\) (write-char #\"))
           (t (write-char c)))))
     (write-char #\"))
    (character
     (write-char #\#)
     (write-char #\\)
     (write-char object))
    ((satisfies sys.int::structure-object-p)
     (write-char #\#)
     (write-char #\<)
     (write (sys.int::structure-name (sys.int::%struct-slot object 0)))
     (write-char #\Space)
     (write-integer (sys.int::lisp-object-address object) 16)
     (write-char #\>))
    (simple-condition
     (write-char #\#)
     (write-char #\<)
     (write (class-name (class-of object)))
     (write-char #\Space)
     (write (simple-condition-format-control object))
     (write-char #\Space)
     (write-integer (sys.int::lisp-object-address object) 16)
     (write-char #\>))
    ((satisfies sys.int::std-instance-p)
     (write-char #\#)
     (write-char #\<)
     (write (class-name (class-of object)))
     (write-char #\Space)
     (write-integer (sys.int::lisp-object-address object) 16)
     (write-char #\>))
    (t (write-char #\#)
       (write-char #\<)
       (write-string "Unknown-object ")
       (write-integer (sys.int::lisp-object-address object) 16)
       (write-char #\>)))
  object)
