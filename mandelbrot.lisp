;;;; Mandelbrot viewer written by Mike "scgtrp" Smith, IPhD.

(defpackage #:mandelbrot
  (:use #:cl))

(in-package #:mandelbrot)

(defclass mandelbrot-window (sys.graphics::window-with-chrome)
  ())

(defun hue-to-rgb (h)
  (let* ((h* (/ (rem h 360.0) 60.0))
         (x (- 1 (abs (- (mod h* 2) 1)))))
    (cond
      ((< h* 1) (values 1 x 0))
      ((< h* 2) (values x 1 0))
      ((< h* 3) (values 0 1 x))
      ((< h* 4) (values 0 x 1))
      ((< h* 5) (values x 0 1))
      ((< h* 6) (values 1 0 x)))))

(defun m (cr ci iterations)
  (let ((zr 0) (zi 0))
    (dotimes (i iterations (values 0 0 0))
      (psetf zr (+ cr (- (* zr zr) (* zi zi)))
             zi (+ ci (* zi zr) (* zr zi)))
      (when (> (+ (* zr zr) (* zi zi)) 4)
        (return (hue-to-rgb (+ 180 (* (/ i iterations) 360))))))))

(defmethod sys.graphics::window-redraw ((window mandelbrot-window))
  (let* ((fb (sys.graphics::window-backbuffer window))
         (dims (array-dimensions fb))
         (width (second dims))
         (height (first dims))
         (white (sys.graphics::make-colour :white))
         (scale (/ 4 width)))
    (multiple-value-bind (left right top bottom)
        (sys.graphics::compute-window-margins window)
      (setf width (- width left right))
      (setf height (- height top bottom))
        (dotimes (x width)
          (dotimes (y height)
            (let ((r 0) (g 0) (b 0))
              (let ((cr (- (* scale (- x (/ width 2))) 0.5))
                    (ci (* scale (- y (/ height 2)))))
                (multiple-value-bind (r* g* b*)
                    (m cr ci 25)
                  (incf r r*)
                  (incf g g*)
                  (incf b b*)))
              (let ((cr (- (* scale (+ (- x (/ width 2)) 0.5)) 0.5))
                    (ci (* scale (- y (/ height 2)))))
                (multiple-value-bind (r* g* b*)
                    (m cr ci 25)
                  (incf r r*)
                  (incf g g*)
                  (incf b b*)))
              (let ((cr (- (* scale (- x (/ width 2))) 0.5))
                    (ci (* scale (+ (- y (/ height 2)) 0.5))))
                (multiple-value-bind (r* g* b*)
                    (m cr ci 25)
                  (incf r r*)
                  (incf g g*)
                  (incf b b*)))
              (let ((cr (- (* scale (+ (- x (/ width 2)) 0.5)) 0.5))
                    (ci (* scale (+ (- y (/ height 2)) 0.5))))
                (multiple-value-bind (r* g* b*)
                    (m cr ci 25)
                  (incf r r*)
                  (incf g g*)
                  (incf b b*)))
            (setf r (/ r 4)
                  g (/ g 4)
                  g (/ b 4))
            (setf (aref fb (+ y top) (+ x bottom)) (sys.graphics::make-colour (list r g b)))))))))

(defmethod sys.graphics::window-close-event :before ((window mandelbrot-window))
  (sys.graphics::close-window window))

(defun create-mandelbrot-window ()
  (sys.graphics::window-set-visibility (sys.graphics::make-window "Mandelbrot" 500 500 'mandelbrot-window) t))

(setf (gethash (name-char "F5") sys.graphics::*global-keybindings*) 'create-mandelbrot-window)
