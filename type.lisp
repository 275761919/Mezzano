(in-package #:sys.int)

(defun type-of (object)
  (ecase (logand (lisp-object-address object) 15)
    (#b0000 (cond ((eql object 0)
                   'bit)
                  (t 'fixnum)))
    (#b0001 'cons)
    (#b0010 (cond ((eql object nil)
                   'null)
                  ((eql object t)
                   'boolean)
                  ((keywordp object)
                   'keyword)
                  (t 'symbol)))
    (#b0011 `(array ,(array-element-type object) ,(array-dimensions object)))
    (#b0100 (class-name (class-of object)))
    (#b0101 'tag-5)
    (#b0110 'tag-6)
    (#b0111 (cond ((structure-object-p object)
                   (sys.int::structure-name (sys.int::%struct-slot object 0)))
                  ((stack-group-p object)
                   'stack-group)
                  ((bignump object)
                   'bignum)
                  (t (let ((ety (array-element-type object)))
                       (case ety
                         (base-char `(simple-base-string ,(array-dimension object 0)))
                         (bit `(simple-bit-vector ,(array-dimension object 0)))
                         ((t) `(simple-vector ,(array-dimension object 0)))
                         (t `(simple-array ,ety (,(array-dimension object 0)))))))))
    (#b1000 (cond ((eql object 1)
                   'bit)
                  (t 'fixnum)))
    (#b1001 'tag-9)
    (#b1010 (cond ((standard-char-p object)
                   'standard-char)
                  ((base-char-p object)
                   'base-char)
                  (t 'extended-char)))
    (#b1011 'tag-11)
    (#b1100 (if (funcallable-std-instance-p object)
                (class-name (class-of object))
                'function))
    (#b1101 'tag-13)
    (#b1110 'unbound-value)
    (#b1111 'gc-forwarding-pointer)))
